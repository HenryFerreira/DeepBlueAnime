{"version":3,"sources":["types/types.js","reducers/animeReducer.js","reducers/favoriteListReducer.js","reducers/rootReducer.js","store/store.js","services/config.js","actions/anime.js","services/animeStreaming/index.js","hooks/useDetailAnime.js","components/AnimeCard/AnimeCard.js","hooks/useDrawer.js","components/Anime/AnimeScreen.js","components/DetailAnime/DetailAnimeScreen.js","components/Drawer/arrayOfgenre.js","components/Drawer/Dropdown.js","components/Drawer/DrawerScreen.js","components/NotFound404/NotFoundScreen.js","components/FavoritesAnime/FavoriteCard.js","components/FavoritesAnime/FavoritesAnime.js","hooks/useSearchAnime.js","hooks/useForm.js","components/Navbar/SearchWindow.js","components/Navbar/NavbarScreen.js","routers/AppRouter.js","App.js","index.js"],"names":["types","initialState","nameList","animeList","nameAndDate","charactersAndStaff","picture","videos","episodes","news","moreInfo","searchAnime","favoriteList","rootReducer","combineReducers","animeStreaming","state","action","type","payload","filter","favorite","id","persistConfig","key","storage","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","instance","axios","create","baseURL","getTop","tier","method","url","getGenre","getCharactersStaff","animeId","getPictures","getVideos","getEpisodes","getNews","getMoreInfo","getSearchAnimeByName","animeName","actGetTop","dispatch","a","res","top","data","console","log","actGetGenre","results","actGetCharactersStaff","characters","staff","charactersLimit","slice","staffLimit","actGetPictures","pictures","actGetVideos","promo","actGetEpisodes","actGetNews","articles","actGetMoreInfo","moreinfo","actGetSearchAnimeByName","actGetNameAndDate","name","date","actGetNameList","actgetClearAllDetail","actGetAddAnimeFavorite","img","actGetRemoveAnimeFavorite","animeActions","useDetailAnime","history","useHistory","useDispatch","useSelector","searchOnList","find","handleNameAndDate","setTimeout","push","handleFavoriteList","e","preventDefault","evaluation","AnimeCard","anime","onClick","title","start_date","mal_id","className","style","backgroundImage","image_url","end_date","score","marginLeft","icon","faStar","rank","faTrophy","faFilm","members","faEye","useDrawer","useState","click","setClick","dropdown","setDropdown","useEffect","length","handleClick","closeMobileMenu","onMouseEnter","innerWidth","onMouseLeave","handleAnimeList","handleAnimeByGenre","AnimeScreen","map","idx","DetailAnimeScreen","src","large","alt","color","faHeartbeat","faHeart","character","textDecoration","href","video_url","episode","episode_id","singleNew","margin","faNewspaper","intro","comments","faComments","arrayOfGenre","number","Dropdown","genre","to","marginRight","faPlay","DrawerScreen","faTimesCircle","faBars","faRunning","faCrown","faSortDown","NotFoundScreen","FavoriteCard","marginTop","FavoritesAnime","useSearchAnime","values","setValues","target","value","useForm","formValues","handleInputChange","showSearchDiv","setShowSearchDiv","searchContainer","useRef","onMouseEnterSearch","onMouseLeaveSearch","SearchWindow","search","synopsis","textAlign","NavbarScreen","onFocus","onBlur","placeholder","onChange","autoComplete","faSearch","AppRouter","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.442e1152.chunk.js","sourcesContent":["//-----------------------------------------------//\n//Devuelve el tipo de cada componente\nexport const types = {\n    getListTopAnimes: '[animeStreaming] show all top animes',\n    getListWithGenre: '[animeStreaming] show list with genre animes',\n    getlistCharactersStaff: '[animeStreaming] show list with staff',\n    getListPictures: '[animeStreaming] show list promotional cover',\n    getListVideos: '[animeStreaming] show promotional trailer',\n    getListEpisodes: '[animeStreaming] show list with episodes',\n    getListNews: '[animeStreaming] show list with news',\n    getMoreInfo: '[animeStreaming] show more information of this anime',\n    getNameAndDate: '[animeStreaming] get name of the anime and date by card',\n    getSearchAnime: '[animeStreaming] show list with anime by names',\n    getTitleOfListAnime: '[animeStreaming] show mame list',\n    getClearAllDetail: '[animeStreaming] clear all boxes containing the anime details',\n    getAddAnimeFavorite: '[animeStreaming] add anime at favorite list',\n    getRemoveAnimeFavorite: '[animeStreaming] remove anime at favorite list',\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { types } from \"../types/types\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\nconst initialState = {\n    nameList: [],\n    animeList: [],\n    nameAndDate: [],\n    charactersAndStaff: [],\n    picture: [],\n    videos: [],\n    episodes: [],\n    news: [],\n    moreInfo: [],\n    searchAnime: [],\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\nexport const animeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.getListTopAnimes:\n            return {\n                ...state,\n                animeList: action.payload\n            }\n        case types.getListWithGenre:\n            return {\n                ...state,\n                animeList: action.payload\n            }\n        case types.getNameAndDate:\n            return {\n                ...state,\n                nameAndDate: action.payload\n            }\n        case types.getlistCharactersStaff:\n            return {\n                ...state,\n                charactersAndStaff: action.payload\n            }\n        case types.getListPictures:\n            return {\n                ...state,\n                picture: action.payload\n            }\n        case types.getListVideos:\n            return {\n                ...state,\n                videos: action.payload\n            }\n        case types.getListEpisodes:\n            return {\n                ...state,\n                episodes: action.payload\n            }\n        case types.getListNews:\n            return {\n                ...state,\n                news: action.payload\n            }\n        case types.getMoreInfo:\n            return {\n                ...state,\n                moreInfo: action.payload\n            }\n        case types.getSearchAnime:\n            return {\n                ...state,\n                searchAnime: action.payload\n            }\n        case types.getTitleOfListAnime:\n            return {\n                ...state,\n                nameList: action.payload\n            }\n        case types.getClearAllDetail:\n            return {\n                ...state,\n                nameAndDate: initialState.nameAndDate,\n                charactersAndStaff: initialState.charactersAndStaff,\n                picture: initialState.picture,\n                videos: initialState.videos,\n                episodes: initialState.episodes,\n                news: initialState.news,\n                moreInfo: initialState.moreInfo,\n            }\n        default:\n            return state;\n    }\n}\n//-----------------------------------------------//\n","//-----------------------------------------------//\n//Imports\nimport { types } from \"../types/types\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\nconst initialState = {\n    favoriteList: [],\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\nexport const favoriteListReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.getAddAnimeFavorite:\n            return {\n                ...state,\n                favoriteList: [...state.favoriteList, action.payload]\n            }\n        case types.getRemoveAnimeFavorite:\n            return {\n                ...state,\n                favoriteList: state.favoriteList.filter(favorite => favorite.id !== action.payload\n                )\n            }\n        default:\n            return state;\n    }\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { combineReducers } from 'redux';\nimport { animeReducer } from './animeReducer';\nimport { favoriteListReducer } from './favoriteListReducer';\n//-----------------------------------------------//\n\n//-----------------------------------------------//\nexport const rootReducer = combineReducers({\n    animeStreaming: animeReducer,\n    favoriteList: favoriteListReducer,\n});\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\n\n//REDUX\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n//REDUCER\nimport { rootReducer } from '../reducers/rootReducer';\n\n//REDUX PERSIST\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';//LocalStorage para la web \n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//REDUX PERSIST\nconst persistConfig = {\n    key: 'persist-key',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//REDUX\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n//-----------------------------------------------//\n\n//-----------------------------------------------//\nexport const store = createStore(\n    persistedReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Exports\n//REDUX PERSIST\nexport const persistor = persistStore(store);\n//-----------------------------------------------//","//----------------------------------------------//\n//Imports\nimport axios from \"axios\";\n//----------------------------------------------//\n\n//----------------------------------------------//\n//Instancia de la API\nconst instance = axios.create({\n    baseURL: 'https://api.jikan.moe/v3'//URL de la API\n});\n//----------------------------------------------//\n\n//----------------------------------------------//\n//Exports\nexport default instance;\n//----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { animeStreamingServices } from '../services/animeStreaming';\nimport { types } from '../types/types';\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Servicios a utilizar\nconst {\n    getTop,\n    getGenre,\n    getCharactersStaff,\n    getPictures,\n    getVideos,\n    getEpisodes,\n    getNews,\n    getMoreInfo,\n    getSearchAnimeByName\n} = animeStreamingServices();\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getTop\nconst actGetTop = (tier) => async (dispatch) => {\n    try {\n        const res = await getTop(tier);\n        const { top } = res.data;\n        dispatch({\n            type: types.getListTopAnimes,\n            payload: top\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getGenre\nconst actGetGenre = (type) => async (dispatch) => {\n    try {\n        const res = await getGenre(type);\n        const { results } = res.data;\n        dispatch({\n            type: types.getListWithGenre,\n            payload: results\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getCharactersStaff\nconst actGetCharactersStaff = (animeId) => async (dispatch) => {\n    try {\n        const res = await getCharactersStaff(animeId);\n        const { characters, staff } = res.data;\n\n        //-----------------------------------------------//\n        //Limite de busquedas\n        const charactersLimit = characters.slice(0, 40);\n        const staffLimit = staff.slice(0, 40);\n        //-----------------------------------------------//\n\n        dispatch({\n            type: types.getlistCharactersStaff,\n            payload: {\n                charactersLimit,\n                staffLimit,\n            }\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getPictures\nconst actGetPictures = (animeId) => async (dispatch) => {\n    try {\n        const res = await getPictures(animeId);\n        const { pictures } = res.data;\n        dispatch({\n            type: types.getListPictures,\n            payload: pictures\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getVideos\nconst actGetVideos = (animeId) => async (dispatch) => {\n    try {\n        const res = await getVideos(animeId);\n        const { promo } = res.data;\n        dispatch({\n            type: types.getListVideos,\n            payload: promo\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getEpisodes\nconst actGetEpisodes = (animeId) => async (dispatch) => {\n    try {\n        const res = await getEpisodes(animeId);\n        const { episodes } = res.data;\n        dispatch({\n            type: types.getListEpisodes,\n            payload: episodes\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getNews\nconst actGetNews = (animeId) => async (dispatch) => {\n    try {\n        const res = await getNews(animeId);\n        const { articles } = res.data;\n        dispatch({\n            type: types.getListNews,\n            payload: articles\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de gerMoreInfo\nconst actGetMoreInfo = (animeId) => async (dispatch) => {\n    try {\n        const res = await getMoreInfo(animeId);\n        const { moreinfo } = res.data;\n        dispatch({\n            type: types.getMoreInfo,\n            payload: moreinfo\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getSearchAnimeByName\nconst actGetSearchAnimeByName = (animeName) => async (dispatch) => {\n    try {\n        const res = await getSearchAnimeByName(animeName);\n        const { results } = res.data;\n        dispatch({\n            type: types.getSearchAnime,\n            payload: results\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getNameAndDate\nconst actGetNameAndDate = (name, date, id) => (dispatch) => {\n    dispatch({\n        type: types.getNameAndDate,\n        payload: {\n            name,\n            date,\n            id,\n        }\n    });\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getTitleOfListAnime\nconst actGetNameList = (name) => (dispatch) => {\n    dispatch({\n        type: types.getTitleOfListAnime,\n        payload: name\n    });\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getClearAllDetail\nconst actgetClearAllDetail = () => (dispatch) => {\n    dispatch({\n        type: types.getClearAllDetail,\n    });\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getAddAnimeFavorite\nconst actGetAddAnimeFavorite = (id, img, name, date) => (dispatch) => {\n    const anime = {\n        id: id,\n        img: img,\n        name: name,\n        date: date,\n    }\n    dispatch({\n        type: types.getAddAnimeFavorite,\n        payload: anime\n    });\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Comportamiento de getRemoveAnimeFavorite\nconst actGetRemoveAnimeFavorite = (id) => (dispatch) => {\n    dispatch({\n        type: types.getRemoveAnimeFavorite,\n        payload: id\n    });\n}\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Exports\nexport const animeActions = () => {\n    return {\n        actGetTop,\n        actGetGenre,\n        actGetCharactersStaff,\n        actGetPictures,\n        actGetVideos,\n        actGetEpisodes,\n        actGetNews,\n        actGetMoreInfo,\n        actGetSearchAnimeByName,\n        actGetNameAndDate,\n        actGetNameList,\n        actgetClearAllDetail,\n        actGetAddAnimeFavorite,\n        actGetRemoveAnimeFavorite,\n    }\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport axios from '../config';\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Servicios a utilizar\nexport const animeStreamingServices = () =>{\n\n    //-----------------------------------------------//\n    //Obtiene los animes que estan en el top de visitas\n    const getTop =(tier)=>{\n        return axios({\n            method: 'GET',\n            url: `/top/anime/1/${tier}`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene el anime dependeindo de su genero\n    const getGenre =(type)=>{\n        return axios({\n            method: 'GET',\n            url: `search/anime?genre=${type}`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene los personajes y los actores de vos\n    const getCharactersStaff  =(animeId)=>{\n        return axios({\n            method: 'GET',\n            url: `/anime/${animeId}/characters_staff`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene la imagen de un anime\n    const getPictures  =(animeId)=>{\n        return axios({\n            method: 'GET',\n            url: `/anime/${animeId}/pictures`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene los videos relacionados con un anime\n    const getVideos  =(animeId)=>{\n        return axios({\n            method: 'GET',\n            url: `/anime/${animeId}/videos`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene los epusodios de un anime\n    const getEpisodes  =(animeId)=>{\n        return axios({\n            method: 'GET',\n            url: `/anime/${animeId}/episodes`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene las noticias relacionadas con un anime\n    const getNews =(animeId)=>{\n        return axios({\n            method: 'GET',\n            url: `/anime/${animeId}/news`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene las recomendaciones relacionadas con un anime\n    const getMoreInfo =(animeId)=>{\n        return axios({\n            method: 'GET',\n            url: `/anime/${animeId}/moreinfo`,\n        })\n    }\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Obtiene los animes por el nombre\n    const getSearchAnimeByName =(animeName)=>{\n        return axios({\n            method: 'GET',\n            url: `search/anime?q=${animeName}&limit=5`,\n        })\n    }\n    //-----------------------------------------------//\n\n    return{\n        getTop,\n        getGenre,\n        getCharactersStaff,\n        getPictures,\n        getVideos,\n        getEpisodes,\n        getNews,\n        getMoreInfo,\n        getSearchAnimeByName,\n    }\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { animeActions } from \"../actions/anime\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Hook \nexport const useDetailAnime = () => {\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const {\n        nameAndDate,\n        charactersAndStaff,\n        picture,\n        videos,\n        episodes,\n        news,\n        moreInfo\n    } = useSelector(state => state.animeStreaming);\n\n    const { favoriteList } = useSelector(state => state.favoriteList);\n\n    const {\n        actGetNameAndDate,\n        actGetCharactersStaff,\n        actGetPictures,\n        actGetVideos,\n        actGetEpisodes,\n        actGetNews,\n        actGetMoreInfo,\n        actgetClearAllDetail,\n        actGetAddAnimeFavorite,\n        actGetRemoveAnimeFavorite,\n    } = animeActions();\n\n    const handleNameAndDate = (name, date, id) => {\n\n        dispatch(actgetClearAllDetail())\n        dispatch(actGetNameAndDate(name, date, id));\n        dispatch(actGetCharactersStaff(id));\n        dispatch(actGetPictures(id));\n        dispatch(actGetVideos(id));\n        dispatch(actGetEpisodes(id));\n        setTimeout(() => {\n            dispatch(actGetNews(id));\n            dispatch(actGetMoreInfo(id));\n            history.push(`/${id}`);\n        }, 600);\n    }\n\n    const handleFavoriteList = (e, id, img, name, date) => {\n        e.preventDefault();\n\n        const evaluation = favoriteList.find(favorite => favorite.id === id);\n        console.log(evaluation)\n        if (evaluation) {\n            dispatch(actGetRemoveAnimeFavorite(id));\n        } else {\n            dispatch(actGetAddAnimeFavorite(id, img, name, date));\n        }\n    }\n\n    const searchOnList = favoriteList.find(favorite => favorite.id === nameAndDate.id);\n\n    return {\n        nameAndDate,\n        charactersAndStaff,\n        picture,\n        videos,\n        episodes,\n        news,\n        moreInfo,\n        favoriteList,\n\n        handleNameAndDate,\n        handleFavoriteList,\n        searchOnList,\n    }\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { faEye, faFilm, faTrophy, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDetailAnime } from \"../../hooks/useDetailAnime\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve la miniatura del anime\nexport const AnimeCard = (anime) => {\n    const { handleNameAndDate } = useDetailAnime();\n\n    return (\n        <div\n            onClick={() => handleNameAndDate(anime.title, anime.start_date, anime.mal_id)}\n            className=\"card\">\n            <div>\n                <div className=\"img1\"\n                    style={{ backgroundImage: `url(${anime.image_url})` }}\n                ></div>\n                <div className=\"img2\"\n                    style={{ backgroundImage: `url(${anime.image_url})` }}\n                ></div>\n                <div className=\"title\">{anime.title}</div>\n                <div className=\"text-card\">\n                    Start date: {anime.start_date}\n                    <br />\n                    Start date: {anime.end_date ? anime.end_date : `Unknown date`}\n                </div>\n                <div className=\"score\">{anime.score}\n                    <FontAwesomeIcon style={{ marginLeft: \"6px\" }} icon={faStar} />\n                </div>\n                <div className=\"rank\">{anime.rank}\n                    <FontAwesomeIcon style={{ marginLeft: \"6px\" }} icon={faTrophy} />\n                </div>\n                <div className=\"catagory\">{anime.type}\n                    <FontAwesomeIcon style={{ marginLeft: \"6px\" }} icon={faFilm} />\n                </div>\n                <div className=\"views\">{anime.members}\n                    <FontAwesomeIcon style={{ marginLeft: \"6px\" }} icon={faEye} />\n                </div>\n            </div>\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports \nimport { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { animeActions } from \"../actions/anime\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Hook\nexport const useDrawer = () => {\n\n    //-----------------------------------------------//\n    //Consumo de servicios\n    const dispatch = useDispatch();\n\n    const {\n        animeList,\n        nameList\n    } = useSelector(state => state.animeStreaming);\n\n    const {\n        actGetTop,\n        actGetGenre,\n        actGetNameList\n    } = animeActions();\n    //-----------------------------------------------//\n\n    //-----------------------------------------------//\n    //Funcionalidades del componente drawer\n    const [click, setClick] = useState(false);\n\n    const handleClick = () => setClick(!click);\n\n    const closeMobileMenu = () => setClick(false);\n\n    const [dropdown, setDropdown] = useState(false);\n\n    const onMouseEnter = () => {\n        if (window.innerWidth < 300) {\n            setDropdown(false);\n        } else {\n            setDropdown(true);\n        }\n    };\n\n    const onMouseLeave = () => {\n        if (window.innerWidth < 300) {\n            setDropdown(false);\n        } else {\n            setDropdown(false);\n        }\n    };\n\n    const handleAnimeList = (tier, name) => {\n        dispatch(actGetTop(tier));\n        dispatch(actGetNameList(name));\n    };\n\n    useEffect(() => {\n        if (animeList.length === 0) {\n            dispatch(actGetNameList(\"TV\"));\n            dispatch(actGetTop(\"tv\"));\n        }\n    }, []);\n\n    const handleAnimeByGenre = (type, name) => {\n        dispatch(actGetGenre(type));\n        dispatch(actGetNameList(name));\n\n    }\n    //-----------------------------------------------//\n\n    return {\n        click,\n        handleClick,\n        closeMobileMenu,\n        dropdown,\n        onMouseEnter,\n        onMouseLeave,\n\n        animeList,\n        nameList,\n\n        handleAnimeList,\n        handleAnimeByGenre,\n    }\n}\n//-----------------------------------------------//\n","//-----------------------------------------------//\nimport { AnimeCard } from \"../AnimeCard/AnimeCard\"\nimport { useDrawer } from \"../../hooks/useDrawer\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve una lista de animes\nexport const AnimeScreen = () => {\n    const { animeList, nameList } = useDrawer();\n\n    return (\n        <div className=\"anime_wrapper\">\n            <h3>{nameList}</h3>\n            <div className=\"container_card\">\n                {\n                    animeList.map((anime, idx) => {\n                        return (\n                            <AnimeCard key={idx} {...anime} />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { faComments, faHeart, faNewspaper } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHeartbeat } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDetailAnime } from \"../../hooks/useDetailAnime\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve los detalles de un anime\nexport const DetailAnimeScreen = () => {\n    const { nameAndDate, charactersAndStaff, picture, videos, episodes, news, moreInfo, handleFavoriteList, searchOnList, } = useDetailAnime();\n\n    return (\n        <div className=\"detail_wrapper\">\n            <div className=\"detail_main\">\n                <div className=\"picture\">\n                    <img src={picture[0] ? picture[0].large : `https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg`} alt=\"anime cover\" />\n                </div>\n                <div className=\"text\">\n                    <div className=\"text_title1\">\n                        <h2>{nameAndDate.name}</h2>\n                        <h3>{nameAndDate.date}</h3>\n                    </div>\n                    <div className=\"text_title2\">\n                        <h2>More information</h2>\n                        <FontAwesomeIcon\n                            style={searchOnList && { color: \"#e63946\" }}\n                            onClick={(e) => handleFavoriteList(e, nameAndDate.id, picture[0].large, nameAndDate.name, nameAndDate.date)}\n                            icon={searchOnList ? faHeartbeat : faHeart} />\n                    </div>\n                    <div className=\"text_content\">\n                        <h3>{(moreInfo && moreInfo.length > 0) ? moreInfo : `We are sorry but at the moment we do not have information about this anime`}</h3>\n                    </div>\n                    <div className=\"text_character\">\n                        <div className=\"text_characters\" >\n                            <h3>Characters</h3>\n                            <div className=\"avatar-group\">\n                                {\n                                    charactersAndStaff.charactersLimit\n                                        ? (\n                                            charactersAndStaff.charactersLimit.map((character, idx) => {\n                                                return (\n                                                    <div key={idx} className=\"avatar \">\n                                                        <span className=\"tooltiptext\">{character.name}</span>\n                                                        <img src={character.image_url} alt=\"avatar\" />\n                                                    </div>\n                                                )\n                                            })\n                                        )\n                                        : (<div className=\"warning_text\">Right now we don't have character to show</div>)\n                                }\n                            </div>\n                        </div>\n                        <div className=\"text_staff\" >\n                            <h3>Staff</h3>\n                            <div className=\"avatar-group\">\n                                {\n                                    charactersAndStaff.staffLimit\n                                        ?\n                                        charactersAndStaff.staffLimit.map((staff, idx) => {\n                                            return (\n                                                <div key={idx} className=\"avatar\">\n                                                    <span className=\"tooltiptext\">{staff.name}</span>\n                                                    <img src={staff.image_url} alt=\"avatar\" />\n                                                </div>\n\n                                            )\n                                        })\n                                        : (<div className=\"warning_text\">Right now we don't have staff to show</div>)\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        videos[0] &&\n                        <a style={{ textDecoration: \"none\" }} href={videos[0].video_url} className=\"btn btn-trailer\">\n                            Trailer\n                        </a>\n                    }\n                </div>\n            </div>\n            <div className=\"detail_episodes\">\n                <h3 className=\"detail_episodes_title\">{nameAndDate.name}<span style={{ marginLeft: \"8px\" }}>Episodes</span></h3>\n                <div className=\"cards_episodes\">\n                    {\n                        episodes\n                            ? (\n                                episodes.map((episode, idx) => {\n                                    return (\n                                        <div key={idx} className=\"card_episode\">\n                                            <a style={{ textDecoration: \"none\" }} href={episode.video_url}>\n                                                <img src={picture[0].large} alt=\"caps\" />\n                                            </a>\n                                            Ep-{episode.episode_id}\n                                        </div>\n                                    )\n                                })\n                            )\n                            : (<div className=\"warning_text\">Right now we don't have episodes to show</div>)\n                    }\n                </div>\n            </div>\n            <div className=\"detail_new\">\n                <h3> News of this anime </h3>\n                <div className=\"detail_new_deck\">\n                    {\n                        news\n                            ? (\n                                news.map((singleNew, idx) => {\n                                    return (\n                                        <div\n                                            key={idx}\n                                            className='deck'>\n                                            <a style={{ textDecoration: \"none\" }} href={singleNew.url}>\n                                                <div className='card-new'>\n                                                    <header className='cardHeader'>\n                                                        <FontAwesomeIcon style={{ color: \"#FFD433\", margin: \"10px\" }} icon={faNewspaper} />\n                                                        <span className='cardHeader_account'>@{singleNew.title}</span>\n                                                        <span className='cardHeader_date'>{singleNew.date}</span>\n                                                    </header>\n                                                    <div className='cardBody'>\n                                                        <p className='cardText'>{singleNew.intro}</p>\n                                                        <section className='cardStats'>\n                                                            <span className='cardStats_stat cardStats_stat-comments'>{singleNew.comments}\n                                                                <FontAwesomeIcon style={{ marginLeft: \"4px\" }} icon={faComments} />\n                                                            </span>\n                                                        </section>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                        </div>\n                                    )\n                                })\n                            )\n                            : (<div className=\"warning_text\">Right now we don't have news to show</div>)\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Arreglo con los generos de los animes\nexport const arrayOfGenre = [\n    {\n        name: \"Acción\",\n        number: 1,\n    },\n    {\n        name: \"Aventura\",\n        number: 2,\n    },\n    {\n        name: \"Autos\",\n        number: 3,\n    },\n    {\n        name: \"Comedia\",\n        number: 4,\n    },\n    {\n        name: \"Vanguardia\",\n        number: 5,\n    },\n    {\n        name: \"Demonios\",\n        number: 6,\n    },\n    {\n        name: \"Misterio\",\n        number: 7,\n    },\n    {\n        name: \"Drama\",\n        number: 8,\n    },\n    {\n        name: \"Ecchi\",\n        number: 9,\n    },\n    {\n        name: \"Fantasía\",\n        number: 10,\n    },\n    {\n        name: \"Juegos\",\n        number: 11,\n    },\n\n    {\n        name: \"Hentai\",\n        number: 12,\n    },\n    {\n        name: \"Histórico\",\n        number: 13,\n    },\n    {\n        name: \"Terror\",\n        number: 14,\n    },\n    {\n        name: \"Infantiles\",\n        number: 15,\n    },\n    {\n        name: \"Artes marciales\",\n        number: 17,\n    },\n\n    {\n        name: \"Mecha\",\n        number: 18,\n    },\n    {\n        name: \"Música\",\n        number: 19,\n    },\n    {\n        name: \"Parodias\",\n        number: 20,\n    },\n\n    {\n        name: \"Samurai\",\n        number: 21,\n    },\n    {\n        name: \"Romance\",\n        number: 22,\n    },\n    {\n        name: \"Escolares\",\n        number: 23,\n    },\n    {\n        name: \"Ciencia Ficción\",\n        number: 24,\n    },\n    {\n        name: \"Shoujo\",\n        number: 25,\n    },\n    {\n        name: \"Girls Love\",\n        number: 26,\n    },\n    {\n        name: \"Shounen\",\n        number: 27,\n    },\n    {\n        name: \"Boys Love\",\n        number: 28,\n    },\n    {\n        name: \"Space\",\n        number: 29,\n    },\n    {\n        name: \"Deportes\",\n        number: 30,\n    },\n    {\n        name: \"Súper poderes\",\n        number: 31,\n    },\n    {\n        name: \"Vampiros\",\n        number: 32,\n    },\n    {\n        name: \"Harem\",\n        number: 35,\n    },\n    {\n        name: \"Historias de la vida\",\n        number: 36,\n    },\n    {\n        name: \"Sobrenatural\",\n        number: 37,\n    },\n    {\n        name: \"Militar\",\n        number: 28,\n    },\n    {\n        name: \"Policía\",\n        number: 39,\n    },\n    {\n        name: \"Psicológico\",\n        number: 40,\n    },\n    {\n        name: \"Suspenso\",\n        number: 41,\n    },\n    {\n        name: \"Seinen\",\n        number: 42,\n    },\n    {\n        name: \"Josei\",\n        number: 43,\n    },\n    {\n        name: \"Ganador de premios\",\n        number: 46,\n    },\n    {\n        name: \"Gastrónomo\",\n        number: 47,\n    },\n    {\n        name: \"Vida laboral\",\n        number: 48,\n    },\n    {\n        name: \"Erótico\",\n        number: 49,\n    },\n\n]\n//-----------------------------------------------//","//-----------------------------------------------//\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport { useDrawer } from \"../../hooks/useDrawer\";\nimport { arrayOfGenre } from \"./arrayOfgenre\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente\nexport const Dropdown = () => {\n    const {\n        click,\n        handleClick,\n        closeMobileMenu,\n        handleAnimeByGenre,\n    } = useDrawer();\n\n    return (\n        <>\n            <ul onClick={handleClick} className={click ? \"dropdown-menu clicked\" : \"dropdown-menu\"}>\n                {\n                    arrayOfGenre.map((genre, idx) => {\n                        return (\n                            <li\n                                onClick={() => handleAnimeByGenre(genre.number, genre.name)}\n                                key={idx}>\n                                <Link\n                                    to=\"/\"\n                                    className=\"dropdown-link\"\n                                    onClick={closeMobileMenu}\n                                >\n                                    <FontAwesomeIcon style={{ marginRight: \"10px\" }} icon={faPlay} />\n                                    {genre.name}\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { faBars, faCrown, faFilm, faHeart, faRunning, faSortDown, faTimesCircle, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport { useDrawer } from \"../../hooks/useDrawer\";\nimport { Dropdown } from \"./Dropdown\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que dibuja las opciones en la pantalla\nexport const DrawerScreen = () => {\n    const {\n        click,\n        handleClick,\n        closeMobileMenu,\n        dropdown,\n        onMouseEnter,\n        onMouseLeave,\n        handleAnimeList\n    } = useDrawer();\n\n    return (\n        <>\n            <nav className=\"navbar\">\n                <Link\n                    onClick={() => handleAnimeList(\"tv\", \"TV\")}\n                    to='/' className=\"navbar-logo\">\n                    <FontAwesomeIcon style={{ marginRight: \"10px\" }} icon={faFilm} />\n                    <span>DeepBlue</span><br/>Anime\n                </Link>\n                <div className=\"menu-icon\" onClick={handleClick}>\n                    <FontAwesomeIcon icon={click ? faTimesCircle : faBars} />\n                </div>\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                    <li\n                        onClick={() => handleAnimeList(\"upcoming\", \"Upcoming\")}\n                        className=\"nav-item\">\n                        <Link to='/' className=\"nav-links\" onClick={closeMobileMenu}>\n                            <FontAwesomeIcon style={{ marginRight: \"10px\" }} icon={faRunning} />\n                            Próximos estrenos\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to='/favoritesList' className=\"nav-links\" onClick={closeMobileMenu}>\n                            <FontAwesomeIcon style={{ marginRight: \"10px\", color: \"#e63946\" }} icon={faHeart} />\n                            Favoritos\n                        </Link>\n                    </li>\n                    <li\n                        onClick={() => handleAnimeList(\"airing\", \"Most Popular\")}\n                        className=\"nav-item\">\n                        <Link to='/' className=\"nav-links\" onClick={closeMobileMenu}>\n                            <FontAwesomeIcon style={{ marginRight: \"10px\", color: \"#e9c46a\" }} icon={faCrown} />\n                            Más populares\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\"\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                    >\n                        <div className=\"nav-links\" onClick={closeMobileMenu}>\n                            Géneros\n                            <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faSortDown} />\n                        </div>\n                        {dropdown && <Dropdown />}\n                    </li>\n                </ul>\n            </nav>\n        </>\n    )\n}\n//-----------------------------------------------//\n","//-----------------------------------------------//\n//Imports\nimport { Link } from \"react-router-dom\"\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve el error 404\nexport const NotFoundScreen = () => {\n    return (\n        <div className=\"img-notFound\">\n            <img src=\"https://raw.githubusercontent.com/riimuru/AnimeLazer/a98a2f1b1127a68011c600f1bc43b967a5735d1f/public/404light.svg\" alt=\"notFoundPage404\" />\n\n            <div className=\"text-notFound\">\n                You do not have any anime added to your list, I recommend that you add one <Link to=\"/\">here</Link>\n            </div>\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { useDetailAnime } from \"../../hooks/useDetailAnime\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve la miniatura de un anime favorito\nexport const FavoriteCard = (favorite) => {\n    const { handleNameAndDate } = useDetailAnime();\n\n    return (\n        <div\n            onClick={() => handleNameAndDate(favorite.name, favorite.start_date, favorite.id)}\n            className=\"favorite_card\"\n            style={{ marginTop: \"20px\" }}\n        >\n            <div className=\"favorite_img\">\n                <img src={favorite.img} alt=\"img_favorite\" />\n            </div>\n            <div className=\"favorite_text\">\n                <h2>{favorite.name}</h2>\n            </div>\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { useDetailAnime } from \"../../hooks/useDetailAnime\";\nimport { NotFoundScreen } from \"../NotFound404/NotFoundScreen\";\nimport { FavoriteCard } from \"./FavoriteCard\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve la lista de animes favoritos\nexport const FavoritesAnime = () => {\n    const { favoriteList, } = useDetailAnime();\n\n    return (\n        <div className=\"favorite_wrapper\">\n            <h3> Your list of favorite anime </h3>\n            <div className=\"container_card\"\n                style={{ marginTop: \"20px\" }}>\n                {\n                    favoriteList.length > 0\n                        ? (favoriteList.map((favorite, idx) => {\n                            return (\n                                <FavoriteCard key={idx} {...favorite} />\n                            )\n                        }))\n                        : (<NotFoundScreen />)\n                }\n            </div>\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { animeActions } from \"../actions/anime\";\nimport { useForm } from \"./useForm\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Hook\nexport const useSearchAnime = () => {\n\n    const dispatch = useDispatch();\n\n    const { actGetSearchAnimeByName } = animeActions();\n\n    const { searchAnime } = useSelector(state => state.animeStreaming);\n\n    const [formValues, handleInputChange] = useForm({ animeName: '' });\n\n    const { animeName } = formValues;\n\n    useEffect(() => {\n        dispatch(actGetSearchAnimeByName(animeName));\n\n    }, [actGetSearchAnimeByName, animeName, dispatch]);\n\n    const [showSearchDiv, setShowSearchDiv] = useState(false);\n\n    const onMouseEnterSearch = () => {\n        setShowSearchDiv(true);\n    };\n\n    const onMouseLeaveSearch = () => {\n        setShowSearchDiv(false);\n    };\n\n    const searchContainer = useRef(null);\n\n    return {\n        animeName,\n        handleInputChange,\n\n        searchAnime,\n\n        searchContainer,\n        showSearchDiv,\n        onMouseEnterSearch,\n        onMouseLeaveSearch,\n    }\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { useState } from 'react';\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Hook\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState)\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSearchAnime } from \"../../hooks/useSearchAnime\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componentes que devuelve la ventana de busqueda\nexport const SearchWindow = () => {\n    const { searchAnime } = useSearchAnime();\n\n    return (\n        <div className=\"searchWindow_wrapper\">\n            {\n                searchAnime.map((search, idx) => {\n                    return (\n                        <div key={idx} className=\"search-card\">\n                            <img src={search.image_url} alt=\"art\" />\n                            <div className=\"search-content\">\n                                <div className=\"search-header\">\n                                    <h1 className=\"search-title\">{search.title}</h1>\n                                    <h4 className=\"search-info\">\n                                        <FontAwesomeIcon style={{ marginRight: \"10px\", color: \"#e9c46a\" }} icon={faStar} />\n                                        score: {search.score}\n                                    </h4>\n                                </div>\n                                <p className=\"search-desc\">{search.synopsis}</p>\n                                <div style={{ marginTop: \"15px\" }}>\n                                    <a href={search.url} style={{ textDecoration: \"none\", textAlign: \"end\" }} className=\"btn btn-more-infor\">More information</a>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\n//Imports\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSearchAnime } from \"../../hooks/useSearchAnime\";\nimport { SearchWindow } from \"./SearchWindow\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Componente que devuelve la barra de navegacion\nexport const NavbarScreen = () => {\n    const {\n        animeName,\n        handleInputChange,\n        showSearchDiv,\n        onMouseEnterSearch,\n        onMouseLeaveSearch,\n    } = useSearchAnime();\n\n    return (\n        <div\n            className=\"search-toggle\">\n            <input\n                onFocus={onMouseEnterSearch}\n                onBlur={onMouseLeaveSearch}\n\n                type=\"text\"\n                placeholder=\"Buscar...\"\n                name=\"animeName\"\n                onChange={handleInputChange}\n                value={animeName}\n                autoComplete=\"off\"\n            />\n            <i>\n                <FontAwesomeIcon icon={faSearch} />\n            </i>\n            {\n                (showSearchDiv && animeName.length > 3) && <SearchWindow />\n            }\n        </div>\n    )\n}\n//-----------------------------------------------//","//-----------------------------------------------//\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { AnimeScreen } from \"../components/Anime/AnimeScreen\";\nimport { DetailAnimeScreen } from \"../components/DetailAnime/DetailAnimeScreen\";\nimport { DrawerScreen } from \"../components/Drawer/DrawerScreen\";\nimport { FavoritesAnime } from \"../components/FavoritesAnime/FavoritesAnime\";\nimport { NavbarScreen } from \"../components/Navbar/NavbarScreen\";\n//-----------------------------------------------//\n\n//-----------------------------------------------//\n//Devuelve las rutas de los componentes\nexport const AppRouter = () => {\n    return (\n        <div>\n            <Router>\n                <div className=\"main_wrapper\">\n                    <DrawerScreen />\n                    <div className=\"streaming_wrapper\">\n                        <NavbarScreen />\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <AnimeScreen />\n                            </Route>\n                            <Route exact path=\"/favoritesList\">\n                                <FavoritesAnime />\n                            </Route>\n                            <Route path=\"/:id\" >\n                                <DetailAnimeScreen />\n                            </Route>\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </div>\n    )\n}\n//-----------------------------------------------//","import { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./store/store\";\n\nimport { AppRouter } from \"./routers/AppRouter\";\n\nfunction App() {\n  return (\n    <Provider store={ store }>\n      <PersistGate persistor={persistor}>\n        <AppRouter/>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styless.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}